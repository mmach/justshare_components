{"version":3,"sources":["../../../../../../src/Scenes/Categories/Components/CategoryOptionTypes/PREVIEW/CategoryOptionGEO_SHOW.jsx"],"names":["React","connect","Translator","MapForm","CategoryOptionGEO_SHOW","Component","constructor","props","render","tran","codeDict","data","LABEL","lang","phTrans","PLACEHOLDER","longitude","item","latitude","encodeURIComponent","category","icon","mapStateToProps","state","DictionaryReducer","LanguageReducer","catOptions","EditCategoryReducer","mapDispatchToProps","dispatch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,6CAApB;;AAOA,MAAMC,sBAAN,SAAqCJ,KAAK,CAACK,SAA3C,CAAqD;AAEjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEH;;AAMDC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAGP,UAAU,CAAC,KAAKK,KAAL,CAAWG,QAAX,CAAoBC,IAApB,CAAyBC,KAA1B,EAAiC,KAAKL,KAAL,CAAWM,IAA5C,CAAvB;AACA,UAAMC,OAAO,GAAGZ,UAAU,CAAC,KAAKK,KAAL,CAAWG,QAAX,CAAoBC,IAApB,CAAyBI,WAA1B,EAAuC,KAAKR,KAAL,CAAWM,IAAlD,CAA1B;AACA,WACI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,gBAAd;AAA+B,MAAA,QAAQ,MAAvC;AAAwC,MAAA,MAAM,EAAE;AAAEG,QAAAA,SAAS,EAAE,KAAKT,KAAL,CAAWU,IAAX,CAAgBD,SAA7B;AAAwCE,QAAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWU,IAAX,CAAgBC;AAAlE,OAAhD;AAA8H,MAAA,IAAI,EAAEC,kBAAkB,CAAC,KAAKZ,KAAL,CAAWU,IAAX,CAAgBG,QAAhB,CAAyBC,IAA1B,CAAtJ;AAAuL,MAAA,WAAW,EAAE,KAApM;AAA2M,MAAA,SAAS,EAAE;AAAtN,MADJ;AAGH;;AAjBgD;;AAqBrD,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAE/B,SAAO;AACHb,IAAAA,QAAQ,EAAEa,KAAK,CAACC,iBADb;AAEHX,IAAAA,IAAI,EAAEU,KAAK,CAACE,eAFT;AAGHC,IAAAA,UAAU,EAAEH,KAAK,CAACI;AAHf,GAAP;AAMH,CARD;;AAUA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO,EAAP;AAOH,CARD;;AAUA,eAAe5B,OAAO,CAClBqB,eADkB,EAElBM,kBAFkB,CAAP,CAGbxB,sBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Translator } from './../../../../../Shared/index.js';\r\nimport MapForm from '../../../../../Components/MapForm/index.jsx';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass CategoryOptionGEO_SHOW extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const tran = Translator(this.props.codeDict.data.LABEL, this.props.lang);\r\n        const phTrans = Translator(this.props.codeDict.data.PLACEHOLDER, this.props.lang);\r\n        return (\r\n            <MapForm size=\"size-map-150px\" readOnly coords={{ longitude: this.props.item.longitude, latitude: this.props.item.latitude }} icon={encodeURIComponent(this.props.item.category.icon)} getFromUser={false} form_text={\"DUPA\"}></MapForm>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        codeDict: state.DictionaryReducer,\r\n        lang: state.LanguageReducer,\r\n        catOptions: state.EditCategoryReducer\r\n\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CategoryOptionGEO_SHOW);\r\n\r\n"],"file":"CategoryOptionGEO_SHOW.js"}