{"version":3,"sources":["../../../../../../src/Scenes/Categories/Components/CategoryOptionTypes/PREVIEW/CategoryOptionIMAGE_SHOW.jsx"],"names":["React","connect","Translator","Slider","Img","WEB_CONFIG","Col","Container","Row","Label","LIGHTBOX_ACTIONS","CategoryOptionIMAGE_SHOW","Component","constructor","props","openImage","event","imgId","currentTarget","getAttribute","target","console","log","blob","item","blobs","filter","obj","id","openLightbox","render","tran","codeDict","data","LABEL","lang","phTrans","PLACEHOLDER","settings","dots","slidesToShow","lazyLoad","centerMode","swipeToSlide","infinite","slidesToScroll","speed","backgroundColor","maxHeight","ref","refSlider","map","index","img","BLOB_URL","NODE_ENV","blob_thumbmail_id","bind","marginTop","overflow","minHeight","mapStateToProps","state","DictionaryReducer","LanguageReducer","catOptions","EditCategoryReducer","mapDispatchToProps","dispatch","activeImage","images","type","OPEN_LIGHTBOX","dto"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Translator } from './../../../../../Shared/index.js';\r\nimport Slider from \"react-slick\";\r\nimport Img from 'react-image';\r\nimport WEB_CONFIG from '../../../../../config.js';\r\nimport { Col, Container, Row, Label } from 'reactstrap';\r\nimport LIGHTBOX_ACTIONS from '../../../../../Components/ImageLightbox/actions.js';\r\n\r\n\r\nclass CategoryOptionIMAGE_SHOW extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    openImage(event) {\r\n\r\n        let imgId = event.currentTarget.getAttribute('data-tag')?event.currentTarget.getAttribute('data-tag'):event.target.getAttribute('data-tag');\r\n        console.log(imgId);\r\n        let blob = this.props.item.blobs.filter(obj => {\r\n            return obj.id == imgId\r\n        })[0]\r\n        this.props.openLightbox(blob, this.props.item.blobs)\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const tran = Translator(this.props.codeDict.data.LABEL, this.props.lang);\r\n        const phTrans = Translator(this.props.codeDict.data.PLACEHOLDER, this.props.lang);\r\n        var settings = {\r\n            dots: false,\r\n            slidesToShow: 4,\r\n            lazyLoad: true,\r\n            centerMode: true,\r\n            swipeToSlide: true,\r\n            infinite: false,\r\n            slidesToScroll: 3,\r\n            speed: 300\r\n\r\n            //  //     slidesToShow:this.state.currentIndex\r\n        };\r\n        return (\r\n            <div className=\"g-pa-0 g-ma-0\" style={{ backgroundColor: \"#eee\", maxHeight: \"175px\" }}>\r\n                <Slider {...settings} ref={ref => { this.refSlider = ref }}>\r\n                    {this.props.item.blobs.map((item, index) => {\r\n                        console.log(item);\r\n                        let img = WEB_CONFIG.BLOB_URL[NODE_ENV] + '/blob/' + item.blob_thumbmail_id\r\n\r\n                        return (\r\n                            <Col className=\" g-brd-gray-light-v4 rounded-0   g-pa-0 g-ma-0 g-brd-around g-brd-gray-light-v3\" >\r\n                                <span data-tag={item.id} onClick={this.openImage.bind(this)} className=\" js-fancybox d-block u-block-hover u-block-hover--scale-down\" style={{ marginTop: \"0px\" }} >\r\n                                    <Img src={img} className={\"img-fluid u-block-hover__main u-block-hover__img\"} style={{overflow:'hidden', minHeight: '175px', maxHeight: '175px' }} />\r\n                                </span></Col>)\r\n                        //  console.log(item);\r\n\r\n                        // let img = item.blobs[0] ? WEB_CONFIG.BLOB_URL[NODE_ENV] + '/blob/' + item.blobs[0].blob_min_id : ''\r\n\r\n                    })}\r\n                </Slider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//            <MapForm readOnly coords={{ longitude: this.props.item.longitude, latitude: this.props.item.latitude }} icon={encodeURIComponent(this.props.item.category.icon)} getFromUser={false} form_text={\"DUPA\"}></MapForm>\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        codeDict: state.DictionaryReducer,\r\n        lang: state.LanguageReducer,\r\n        catOptions: state.EditCategoryReducer\r\n\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        openLightbox: (activeImage, images) => {\r\n            return dispatch({\r\n                type: LIGHTBOX_ACTIONS.OPEN_LIGHTBOX,\r\n                dto: {\r\n                    images: images,\r\n                    activeImage: activeImage\r\n                }\r\n            })\r\n\r\n        },\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CategoryOptionIMAGE_SHOW);\r\n\r\n"],"file":"CategoryOptionIMAGE_SHOW.js"}