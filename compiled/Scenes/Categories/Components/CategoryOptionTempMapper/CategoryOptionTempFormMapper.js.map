{"version":3,"sources":["../../../../../src/Scenes/Categories/Components/CategoryOptionTempMapper/CategoryOptionTempFormMapper.jsx"],"names":["React","connect","QueryList","CategoryOptionFormGEO","CategoryOptionFormIMAGE","CategoryOptionFormMULTISELECT","CategoryOptionFormSELECT","CategoryOptionFormSINGLE","Translator","BaseService","CategoryOptionTempFormMapper","Component","constructor","props","state","getCategoryOptionsTypeQuery","componentDidMount","getCategoryOptionsType","then","succ","setState","data","getDropDownValues","map","item","id","value","name","type","checkType","catType","filter","catOption","cot_id","render","tran","codeDict","LABEL","lang","phTrans","PLACEHOLDER","length","optionValue","onChange","category_id","categoryIcon","mapStateToProps","DictionaryReducer","LanguageReducer","mapDispatchToProps","dispatch","queryThunt","CategoryOptions","GET_OPTIONS_TYPE"],"mappings":"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","sourcesContent":["/*\r\n    ./client/components/App.jsx\r\n*/\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport QueryList from '../../../../Shared/QueryList.js';\r\nimport CategoryOptionFormGEO from '../CategoryOptionTypes/FORM/CategoryOptionFormGEO.jsx';\r\nimport CategoryOptionFormIMAGE from '../CategoryOptionTypes/FORM/CategoryOptionFormIMAGE.jsx';\r\nimport CategoryOptionFormMULTISELECT from '../CategoryOptionTypes/FORM/CategoryOptionFormMULTISELECT.jsx';\r\nimport CategoryOptionFormSELECT from '../CategoryOptionTypes/FORM/CategoryOptionFormSELECT.jsx';\r\nimport CategoryOptionFormSINGLE from '../CategoryOptionTypes/FORM/CategoryOptionFormSINGLE.jsx';\r\nimport { Translator } from './../../../../Shared/index.js';\r\nimport { BaseService } from './../../../../App/index.js';\r\n\r\n\r\n\r\nclass CategoryOptionTempFormMapper extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n        this.state.getCategoryOptionsTypeQuery = [];\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getCategoryOptionsType().then(succ => {\r\n            this.setState(\r\n                {\r\n                    getCategoryOptionsTypeQuery: succ.data\r\n                }\r\n            )\r\n\r\n        });\r\n\r\n    }\r\n    getDropDownValues() {\r\n        return this.state.getCategoryOptionsTypeQuery.map(item => {\r\n            return { id: item.id, value: item.name, type: item.type }\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    checkType(catType) {\r\n        return this.state.getCategoryOptionsTypeQuery.filter(item => {\r\n            return (item.type == catType && (item.id == this.props.catOption.cot_id))\r\n\r\n        })\r\n    }\r\n    render() {\r\n        const tran = Translator(this.props.codeDict.data.LABEL, this.props.lang);\r\n        const phTrans = Translator(this.props.codeDict.data.PLACEHOLDER, this.props.lang);\r\n        return (\r\n\r\n            <div>\r\n                {this.checkType('SELECT').length > 0 ? <div><CategoryOptionFormSELECT optionValue={this.props.optionValue} onChange={this.props.onChange} catOptionsTemp={this.checkType('SELECT')[0]} category_id={this.props.category_id} catOption={this.props.catOption}></CategoryOptionFormSELECT></div> :\r\n                    this.checkType('MULTI_SELECT').length > 0 ? <div><CategoryOptionFormMULTISELECT optionValue={this.props.optionValue} onChange={this.props.onChange} catOptionsTemp={this.checkType('MULTI_SELECT')[0]} category_id={this.props.category_id} catOption={this.props.catOption}></CategoryOptionFormMULTISELECT></div> :\r\n                        this.checkType('SINGLE').length > 0 ? <div><CategoryOptionFormSINGLE optionValue={this.props.optionValue} onChange={this.props.onChange} catOptionsTemp={this.checkType('SINGLE')[0]} category_id={this.props.category_id} catOption={this.props.catOption}></CategoryOptionFormSINGLE></div> :\r\n                            this.checkType('IMAGES').length > 0 ? <div><CategoryOptionFormIMAGE optionValue={this.props.optionValue} onChange={this.props.onChange} catOptionsTemp={this.checkType('IMAGES')[0]} category_id={this.props.category_id} catOption={this.props.catOption}></CategoryOptionFormIMAGE></div> :\r\n                                this.checkType('GEOCOORDINATE').length > 0 ? <div><CategoryOptionFormGEO optionValue={this.props.optionValue} categoryIcon={this.props.categoryIcon} onChange={this.props.onChange} catOptionsTemp={this.checkType('GEOCOORDINATE')[0]} category_id={this.props.category_id} catOption={this.props.catOption}></CategoryOptionFormGEO></div> :\r\n\r\n                                    //        this.checkType('SINGLE').length > 0 ? <span><CategoryOptionSINGLE catOptionsTemp={this.checkType('SINGLE')[0]} category_id={this.props.category_id} catOption={this.props.catOptions}></CategoryOptionSINGLE></span> :\r\n                                    //           this.checkType('BETWEEN').length > 0 ? <span><CategoryOptionBETWEEN catOptionsTemp={this.checkType('BETWEEN')[0]} category_id={this.props.category_id} catOption={this.props.catOptions}></CategoryOptionBETWEEN></span> :\r\n\r\n                                    <span></span>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        codeDict: state.DictionaryReducer,\r\n        lang: state.LanguageReducer,\r\n        // catOptions: state.EditCategoryReducer\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getCategoryOptionsType: (id) => {\r\n            return dispatch(new BaseService().queryThunt(QueryList.CategoryOptions.GET_OPTIONS_TYPE, {}));\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CategoryOptionTempFormMapper);\r\n\r\n"],"file":"CategoryOptionTempFormMapper.js"}