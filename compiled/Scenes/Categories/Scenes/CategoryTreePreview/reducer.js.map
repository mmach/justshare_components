{"version":3,"sources":["../../../../../src/Scenes/Categories/Scenes/CategoryTreePreview/reducer.js"],"names":["CATEGORY_TREE_ACTIONS","emptyState","categories","isLoading","CategoryTreeReducer","state","Object","assign","action","type","GET_ALL_CATEGORIES_FETCH","LOADING","result","SUCCESS","data","console","log","FINALLY","EDIT_CATEGORY_FETCH","cat","map","item","expand","dto","id","category_child_id","title","category","forThing","forSell","forEvent","icon","status","catReq","forEach","push","category_parent_id","includes","expanded","DELETE_CATEGORY_FETCH","catParentArray","catParent","filter","SET_PARENT_FETCH","CategoryHierarchy","el","length","ADD_CATEGORY_FETCH"],"mappings":"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","sourcesContent":["import CATEGORY_TREE_ACTIONS from './actions';\r\n\r\nlet emptyState = {\r\n\r\n    categories: [],\r\n    isLoading: false\r\n\r\n}\r\nexport default function CategoryTreeReducer(state = Object.assign({}, emptyState), action) {\r\n    switch (action.type) {\r\n\r\n\r\n        case CATEGORY_TREE_ACTIONS.GET_ALL_CATEGORIES_FETCH.LOADING:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                result.isLoading = true;\r\n                return result;\r\n            }\r\n        case CATEGORY_TREE_ACTIONS.GET_ALL_CATEGORIES_FETCH.SUCCESS:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                result.categories = action.data;\r\n                result.isLoading = false;\r\n                console.log(result)\r\n                return result;\r\n            }\r\n\r\n        case CATEGORY_TREE_ACTIONS.GET_ALL_CATEGORIES_FETCH.FINALLY:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                result.isLoading = false;\r\n                if (state.isLoading != result.isLoading) {\r\n                    return result;\r\n                }\r\n                return state;\r\n\r\n            }\r\n        case CATEGORY_TREE_ACTIONS.EDIT_CATEGORY_FETCH.LOADING:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                result.isLoading = true;\r\n                return result;\r\n            }\r\n        case CATEGORY_TREE_ACTIONS.EDIT_CATEGORY_FETCH.SUCCESS:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                let cat = [];\r\n\r\n                result.categories = result.categories.map(item => {\r\n                    item.expand = false;\r\n                    if (action.dto.id == item.category_child_id) {\r\n                        item.title = action.dto.category;\r\n                        item.category = action.dto.category;\r\n                        item.forThing = action.dto.forThing;\r\n                        item.forSell = action.dto.forSell\r\n                        item.forEvent = action.dto.forEvent\r\n                        item.icon = action.dto.icon\r\n                        item.status = action.dto.status\r\n                    }\r\n                    return item;\r\n                })\r\n                var catReq = (id, categories) => {\r\n                    categories.forEach(item => {\r\n                        if (item.category_child_id == id) {\r\n                            cat.push(item.category_parent_id);\r\n                            catReq(item.category_parent_id, categories)\r\n                        }\r\n                    });\r\n                }\r\n                catReq(action.dto.id, result.categories);\r\n                cat.push(action.dto.id);\r\n                result.categories = result.categories.map(item => {\r\n                    if (cat.includes(item.category_child_id)) {\r\n                        item.expanded = true;\r\n                    } else {\r\n                        item.expanded = false\r\n                    }\r\n                    return item;\r\n                })\r\n                return result;\r\n            }\r\n\r\n        case CATEGORY_TREE_ACTIONS.DELETE_CATEGORY_FETCH.SUCCESS:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                let cat = [];\r\n                var catReq = (id, categories) => {\r\n                    categories.forEach(item => {\r\n                        if (item.category_parent_id == id) {\r\n                            cat.push(item.category_child_id);\r\n                            catReq(item.category_child_id, categories)\r\n                        }\r\n                    });\r\n                }\r\n                catReq(action.dto.id, result.categories);\r\n                cat.push(action.dto.id);\r\n\r\n\r\n\r\n                let catParentArray = [];\r\n                var catParent = (id, categories) => {\r\n                    categories.forEach(item => {\r\n                        if (item.category_child_id == id) {\r\n                            catParentArray.push(item.category_parent_id);\r\n                            catParent(item.category_parent_id, categories)\r\n                        }\r\n                    });\r\n                }\r\n                catParent(action.dto.id, result.categories);\r\n                result.categories = result.categories.map(item => {\r\n                    if (catParentArray.includes(item.category_child_id)) {\r\n                        item.expanded = true;\r\n                    } else {\r\n                        item.expanded = false\r\n                    }\r\n                    return item;\r\n                })\r\n                result.categories = result.categories.filter(item => {\r\n                    return !cat.includes(item.category_child_id)\r\n                })\r\n                return result;\r\n            }\r\n        case CATEGORY_TREE_ACTIONS.DELETE_CATEGORY_FETCH.LOADING:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                result.isLoading = true;\r\n\r\n                return result;\r\n            }\r\n        case CATEGORY_TREE_ACTIONS.DELETE_CATEGORY_FETCH.FINALLY:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                result.isLoading = false;\r\n\r\n                return result;\r\n            }\r\n\r\n        case CATEGORY_TREE_ACTIONS.EDIT_CATEGORY_FETCH.FINALLY:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                result.isLoading = false;\r\n                return result;\r\n            }\r\n\r\n        case CATEGORY_TREE_ACTIONS.SET_PARENT_FETCH.LOADING:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                result.isLoading = true;\r\n                return result;\r\n            }\r\n        case CATEGORY_TREE_ACTIONS.SET_PARENT_FETCH.SUCCESS:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                var cat = [];\r\n                var catReq = (id, categories) => {\r\n                    categories.forEach(item => {\r\n                        if (item.category_parent_id == id) {\r\n                            cat.push(item.category_child_id);\r\n                            catReq(item.category_child_id, categories)\r\n                        }\r\n                    });\r\n                }\r\n                catReq(action.dto.id, result.categories);\r\n                cat.push(action.dto.id);\r\n\r\n                result.categories = result.categories.map(item => {\r\n                    if (cat.includes(item.category_child_id)) {\r\n                        item.status = action.dto.status\r\n                        if (action.dto.id == item.category_child_id) {\r\n                            //item.expanded=true\r\n                            item.category_parent_id = action.dto.CategoryHierarchy.category_parent_id;\r\n\r\n                        }\r\n                    }\r\n                    return item;\r\n                })\r\n\r\n                cat = [];\r\n                var catParent = (id, categories) => {\r\n                    categories.forEach(item => {\r\n                        if (item.category_child_id == id) {\r\n                            cat.push(item.category_parent_id);\r\n                            catParent(item.category_parent_id, categories)\r\n                        }\r\n                    });\r\n                }\r\n                cat.push(action.dto.id);\r\n\r\n                catParent(action.dto.id, result.categories);\r\n                result.categories = result.categories.map(item => {\r\n                    if (cat.filter(el => { return item.category_child_id == el }).length > 0) {\r\n                        item.expanded = true;\r\n                    } else {\r\n                        item.expanded = false\r\n                    }\r\n                    return item;\r\n                })\r\n                return result;\r\n            }\r\n        case CATEGORY_TREE_ACTIONS.SET_PARENT_FETCH.FINALLY:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                result.isLoading = false;\r\n                return result;\r\n            }\r\n        case CATEGORY_TREE_ACTIONS.ADD_CATEGORY_FETCH.LOADING:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                result.isLoading = true;\r\n                return result;\r\n            }\r\n\r\n        case CATEGORY_TREE_ACTIONS.ADD_CATEGORY_FETCH.SUCCESS:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                // result.isLoading = true;\r\n                result.categories.push({\r\n                    title: action.dto.category,\r\n                    category: action.dto.category,\r\n                    forThing: action.dto.forThing,\r\n                    forSell: action.dto.forSell,\r\n                    forEvent: action.dto.forEvent,\r\n                    icon: action.dto.icon,\r\n                    status: action.dto.status,\r\n                    category_child_id: action.dto.id,\r\n                    category_parent_id: (action.dto.CategoryHierarchy.category_parent_id != '' ? action.dto.CategoryHierarchy.category_parent_id : null)\r\n\r\n\r\n                })\r\n                let cat=[]\r\n                var catReq = (id, categories) => {\r\n                    categories.forEach(item => {\r\n                        if (item.category_child_id == id) {\r\n                            cat.push(item.category_parent_id);\r\n                            catReq(item.category_parent_id, categories)\r\n                        }\r\n                    });\r\n                }\r\n                catReq(action.dto.id, result.categories);\r\n                cat.push(action.dto.id);\r\n                result.categories = result.categories.map(item => {\r\n                    if (cat.includes(item.category_child_id)) {\r\n                        item.expanded = true;\r\n                    } else {\r\n                        item.expanded = false\r\n                    }\r\n                    return item;\r\n                })\r\n                return result;\r\n            }\r\n        case CATEGORY_TREE_ACTIONS.ADD_CATEGORY_FETCH.FINALLY:\r\n            {\r\n                const result = Object.assign({}, state);\r\n                result.isLoading = false;\r\n                return result;\r\n            }\r\n\r\n\r\n\r\n\r\n        default:\r\n            {\r\n                return state;\r\n            }\r\n    }\r\n\r\n}"],"file":"reducer.js"}