{"version":3,"sources":["../../../../src/Components/MapComponent/Map/index.js"],"names":["React","L","MapMarker","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","Map","Component","constructor","props","state","mapObj","componentDidMount","mapEl","map","id","center","lat","lng","zoom","layers","tileLayer","attribution","setState","render","elements","Children","children","item","createElement","type","key"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,SAAd;AAEA,OAAO,0BAAP;AACA,OAAOC,SAAP,MAAsB,cAAtB,C,CACA;;AACA,OAAOD,CAAC,CAACE,IAAF,CAAOC,OAAP,CAAeC,SAAf,CAAyBC,WAAhC;AAEAL,CAAC,CAACE,IAAF,CAAOC,OAAP,CAAeG,YAAf,CAA4B;AACxBC,EAAAA,aAAa,EAAEC,OAAO,CAAC,wCAAD,CADE;AAExBC,EAAAA,OAAO,EAAED,OAAO,CAAC,qCAAD,CAFQ;AAGxBE,EAAAA,SAAS,EAAEF,OAAO,CAAC,uCAAD;AAHM,CAA5B;;AAMA,MAAMG,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAGhB,QAAIC,KAAK,GAAGlB,CAAC,CAACmB,GAAF,CAAM,KAAKL,KAAL,CAAWM,EAAjB,EAAqB;AAC7BC,MAAAA,MAAM,EAAE,CAAC,KAAKP,KAAL,CAAWQ,GAAZ,EAAiB,KAAKR,KAAL,CAAWS,GAA5B,CADqB;AAE7BC,MAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWU,IAFY;AAG7BC,MAAAA,MAAM,EAAE,CACJzB,CAAC,CAAC0B,SAAF,CAAY,yCAAZ,EAAuD;AACnDC,QAAAA,WAAW,EAAE;AADsC,OAAvD,CADI;AAHqB,KAArB,CAAZ;AASA;;;;;;;;;;;;;;;;;;;;AAuBA,SAAKC,QAAL,CAAc,CAACb,KAAD,EAAQD,KAAR,MAAmB;AAC7BE,MAAAA,MAAM,EAAEE;AADqB,KAAnB,CAAd;AAKH;;AAEDW,EAAAA,MAAM,GAAG;AAEL,QAAIC,QAAQ,GAAG/B,KAAK,CAACgC,QAAN,CAAeZ,GAAf,CAAmB,KAAKL,KAAL,CAAWkB,QAA9B,EAAwCC,IAAI,IAAI;AAC3D,aAAOlC,KAAK,CAACmC,aAAN,CAAoBD,IAAI,CAACE,IAAzB,EAA+B;AAClCC,QAAAA,GAAG,EAAEH,IAAI,CAACnB,KAAL,CAAWS,GADkB;AAElCA,QAAAA,GAAG,EAAEU,IAAI,CAACnB,KAAL,CAAWS,GAFkB;AAGlCD,QAAAA,GAAG,EAAEW,IAAI,CAACnB,KAAL,CAAWQ,GAHkB;AAIlCN,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AAJe,OAA/B,EAKJiB,IAAI,CAACnB,KAAL,CAAWkB,QALP,CAAP;AAOH,KARc,CAAf;AAUA,WAAO;AAAK,MAAA,EAAE,EAAE,KAAKlB,KAAL,CAAWM;AAApB,OAEFU,QAFE,CAAP;AAIH;;AAjE6B;;AAoElC,eAAenB,GAAf","sourcesContent":["import React from 'react';\r\nimport L from 'leaflet';\r\n\r\nimport 'leaflet/dist/leaflet.css';\r\nimport MapMarker from '../MapMarker';\r\n//import { Map } from 'react-leaflet';\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapObj: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n\r\n        let mapEl = L.map(this.props.id, {\r\n            center: [this.props.lat, this.props.lng],\r\n            zoom: this.props.zoom,\r\n            layers: [\r\n                L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n                    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                }),\r\n            ]\r\n        });\r\n        /*  this.props.children.map(item => {\r\n              if (item.type.name == \"MapMarker\") {\r\n                  let marker = L.marker([item.props.lat, item.props.lng], {}).bindPopup(\"I am a green leaf.\").addTo(mapEl);\r\n                  return {\r\n                      mapElement: marker,\r\n                      id: 0,\r\n                      lng: item.props.lng,\r\n                      lat: item.props.lat\r\n                  }\r\n  \r\n              } else if (item.type.name == \"MapCircle\") {\r\n                  var circle = L.circle([item.props.lat, item.props.lng], {\r\n                      color: '#aaa',\r\n                      fillColor: '#aaa',\r\n                      fillOpacity: 0.3,\r\n                      radius: 100,\r\n                      weight: 1\r\n                  }).addTo(mapEl);\r\n              }\r\n  \r\n  \r\n          })*/\r\n\r\n        this.setState((state, props) => ({\r\n            mapObj: mapEl\r\n        }));\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let elements = React.Children.map(this.props.children, item => {\r\n            return React.createElement(item.type, {\r\n                key: item.props.lng,\r\n                lng: item.props.lng,\r\n                lat: item.props.lat,\r\n                mapObj: this.state.mapObj\r\n            }, item.props.children);\r\n\r\n        })\r\n        \r\n        return <div id={this.props.id}>\r\n\r\n            {elements}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Map;"],"file":"index.js"}