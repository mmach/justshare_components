{"version":3,"sources":["../../../src/Components/FormComponent/index.jsx"],"names":["React","FormComponent","Component","constructor","props","state","validation","label","isRequired","field","guid","global","init","FormValidation","i","isDanger","classError","map","item","path","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sDAAP;AAGA,eAAe,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAEvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKA,KAAL,CAAWC,UAAX,GAAwB,EAAxB;AACA,QAAIC,KAAK,GAAGH,KAAK,CAACG,KAAlB;;AACA,QAAI,KAAKH,KAAL,CAAWI,UAAX,IAAyB,IAA7B,EAAmC;AAC/BD,MAAAA,KAAK,IAAI,IAAT;AACH;;AACD,SAAKF,KAAL,CAAWI,KAAX,GAAmBL,KAAK,CAACK,KAAzB;AACA,SAAKJ,KAAL,CAAWC,UAAX,GAAwBF,KAAK,CAACE,UAAN,GAAmBF,KAAK,CAACE,UAAzB,GAAsC,EAA9D;AACA,SAAKD,KAAL,CAAWK,IAAX,GAAkBC,MAAM,CAACD,IAAP,EAAlB;AACA,SAAKL,KAAL,CAAWE,KAAX,GAAmBA,KAAnB;AACH;;AACDK,EAAAA,IAAI,GAAG,CAEN;;AACDC,EAAAA,cAAc,GAAG;AACb,QAAIA,cAAc,GAAG,EAArB;AACA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,UAAU,GAAG,uBAAjB;AACA,SAAKX,KAAL,CAAWC,UAAX,CAAsBW,GAAtB,CAA2BC,IAAD,IAAU;AAChC,UAAIA,IAAI,CAACC,IAAL,CAAU,CAAV,KAAgB,KAAKf,KAAL,CAAWK,KAA/B,EAAsC;AAClCI,QAAAA,cAAc,CAACC,CAAD,CAAd,GAAoB;AAAO,UAAA,SAAS,EAAC,uBAAjB;AAAyC,UAAA,GAAG,EAAEA;AAA9C,WAAkDI,IAAI,CAACE,GAAvD,EAA2D,+BAA3D,CAApB;AACAN,QAAAA,CAAC;;AACD,YAAIA,CAAC,KAAK,CAAV,EAAa;AACTC,UAAAA,QAAQ,GAAG,QAAX;AACAC,UAAAA,UAAU,IAAI,iBAAd;AACH;AACJ;AACJ,KATD;AAUA,WAAO;AAAEH,MAAAA,cAAc,EAAEA,cAAlB;AAAkCE,MAAAA,QAAQ,EAAEA,QAA5C;AAAsDC,MAAAA,UAAU,EAAEA;AAAlE,KAAP;AACH;;AAnCsD","sourcesContent":["import React from 'react';\r\nimport './../../Shared/BaseObjects/Helper/commonFunctions.js';\r\n\r\n\r\nexport default class FormComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.validation = []\r\n        let label = props.label;\r\n        if (this.props.isRequired == true) {\r\n            label += ' *';\r\n        }\r\n        this.state.field = props.field;\r\n        this.state.validation = props.validation ? props.validation : [];\r\n        this.state.guid = global.guid();\r\n        this.state.label = label;\r\n    }\r\n    init() {\r\n\r\n    }\r\n    FormValidation() {\r\n        let FormValidation = [];\r\n        let i = 0;\r\n        let isDanger = \"\";\r\n        let classError = \"row g-mb-25 text-left\";\r\n        this.state.validation.map((item) => {\r\n            if (item.path[0] == this.props.field) {\r\n                FormValidation[i] = <small className=\"form-control-feedback\" key={i}>{item.msg}<br /></small>\r\n                i++;\r\n                if (i === 1) {\r\n                    isDanger = \"danger\";\r\n                    classError += \" u-has-error-v1\";\r\n                }\r\n            }\r\n        })\r\n        return { FormValidation: FormValidation, isDanger: isDanger, classError: classError };\r\n    }\r\n\r\n\r\n\r\n}"],"file":"index.js"}