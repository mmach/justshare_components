{"version":3,"sources":["../../../src/Components/ImageLightbox/index.jsx"],"names":["React","Img","connect","Col","Container","Row","WEB_CONFIG","LIGHTBOX_ACTIONS","ImageLightbox","Component","constructor","open","isLoading","thumbmailClickHandler","event","props","getImage","id","currentTarget","getAttribute","onOpenModal","setState","onCloseModal","closeWindow","init","closeLightboxHandler","closeLightbox","render","lightbox","img","activeImage","BLOB_URL","NODE_ENV","blob_item","imgReact","maxWidth","maxHeight","lightboxBody","bind","flex","justifyContent","alignItems","alignSelf","alignContent","display","imageList","length","minHeight","map","item","actualId","blob_thumbmail","blob_min_id","body","mapStateToProps","state","ImageLightboxReducer","mapDispatchToProps","dispatch","type","SET_ACTIVE_IMG_LIGHTBOX","dto","CLOSE_LIGHTBOX"],"mappings":"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","sourcesContent":["/*\r\n    ./client/components/App.jsx\r\n*/\r\n\r\nimport React from 'react';\r\nimport Img from 'react-image';\r\nimport { connect } from 'react-redux';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport WEB_CONFIG from '../../config.js';\r\nimport LIGHTBOX_ACTIONS from './actions.js';\r\n\r\n\r\nclass ImageLightbox extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.open = false;\r\n        this.isLoading = false;\r\n\r\n    }\r\n\r\n    thumbmailClickHandler(event) {\r\n        this.props.getImage({ id: event.currentTarget.getAttribute('data-tag') })\r\n    }\r\n    onOpenModal() {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    onCloseModal() {\r\n        this.props.closeWindow();\r\n    };\r\n\r\n    init() {\r\n        this.open = false;\r\n    }\r\n    closeLightboxHandler(event) {\r\n        this.props.closeLightbox(false);\r\n    }\r\n    render() {\r\n\r\n\r\n        if (this.props.lightbox.open == false) {\r\n            return <span></span>\r\n        }\r\n        let img = this.props.lightbox.activeImage ?\r\n        `${WEB_CONFIG.BLOB_URL[NODE_ENV]}/blob/${this.props.lightbox.activeImage.blob_item.id}`:\r\n            ''\r\n        let imgReact = img != null ? <img style={{ maxWidth: '80vw', maxHeight: '90vh' }} src={img} />: <span></span>\r\n\r\n        let lightboxBody =\r\n            (<Col onClick={this.closeLightboxHandler.bind(this)} style={{\r\n                flex: 1,\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                alignSelf: 'center',\r\n                alignContent: 'center',\r\n                display: 'flex'\r\n\r\n\r\n            }} xs=\"12\">\r\n                {img != null ? <img style={{ maxWidth: '80vw', maxHeight: '90vh' }} src={img} /> : <span></span>}</Col>)\r\n           \r\n\r\n        if (this.props.lightbox.imageList.length > 1) {\r\n            lightboxBody =\r\n                <Row className=\"ligbboxBody\">\r\n                        \r\n                            <Col onClick={this.closeLightboxHandler.bind(this)} style={{\r\n                                flex: 1,\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                alignSelf: 'center',\r\n                                alignContent: 'center',\r\n                                display: 'flex',\r\n                                minHeight:'100vh'\r\n\r\n                            }} xs=\"10\">\r\n                                {imgReact}\r\n                            </Col>\r\n                        \r\n\r\n                    <Col xs=\"2\" className=\"lighboxRight g-pa-10\" >\r\n\r\n                        < Row >\r\n                            {\r\n                                this.props.lightbox.imageList.map(item => {\r\n                                    let actualId = this.props.lightbox.activeImage ? this.props.lightbox.activeImage.id : 0;\r\n                                    return <div key={item.blob_thumbmail.id} class=\"col-md-6  g-ma-0 g-pa-0 g-pl-10 \">\r\n                                        <div class=\"g-brd-around g-brd-gray-light-v4--hover\">\r\n                                            <span data-tag={item.blob_item.id} className={\"js-fancybox d-block u-block-hover u-block-hover--scale-down \"} href=\"#\" onClick={this.thumbmailClickHandler.bind(this)} data-fancybox=\"lightbox-gallery--17\" data-src=\"../../assets/img-temp/400x270/img1.jpg\" data-animate-in=\"bounceInDown\" data-animate-out=\"bounceOutDown\" data-speed=\"1000\" data-overlay-blur-bg=\"true\" data-caption=\"Lightbox Gallery\">\r\n                                                <Img src={`${WEB_CONFIG.BLOB_URL[NODE_ENV]}/blob/${item.blob_min_id}`} className={\"img-fluid  u-block-hover__img \" + (actualId == item.id ? \"\" : \"u-block-hover__main--grayscale\")} />\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                })\r\n                            }\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n        }\r\n        let body =\r\n            (\r\n                <div>\r\n                    <div className=\"lightboxContainer\" onClick={this.closeLightboxHandler.bind(this)}></div>\r\n                    <Container className=\"ligbboxBody\" >\r\n\r\n                        {lightboxBody}\r\n\r\n\r\n                    </Container>\r\n                </div>\r\n            )\r\n\r\n        return (\r\n\r\n            body\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n\r\n\r\n        lightbox: state.ImageLightboxReducer\r\n\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        /*   openLightbox: (open, action) => {\r\n               dispatch({\r\n                   type: LIGHTBOX_ACTIONS.OPEN_MODAL,\r\n                   dto: {\r\n                       open: open,\r\n                       action: action\r\n                   }\r\n               });\r\n           },*/\r\n        getImage: (id) => {\r\n            dispatch({\r\n                type: LIGHTBOX_ACTIONS.SET_ACTIVE_IMG_LIGHTBOX,\r\n                dto: id\r\n            });\r\n\r\n        },\r\n        closeLightbox: () => {\r\n            dispatch({\r\n                type: LIGHTBOX_ACTIONS.CLOSE_LIGHTBOX,\r\n                dto: {\r\n                    open: false,\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ImageLightbox);"],"file":"index.js"}