{"version":3,"sources":["../../../src/Components/HistogramSlider/HistogramSlider.jsx"],"names":["React","Histogram","Rheostat","HistogramSlider","Component","constructor","props","state","value","timeout","componentWillReceiveProps","nextProps","setState","reset","e","preventDefault","min","max","onApply","onChange","isDisabled","handleSliderChange","values","handleApply","render","console","error","data","rangeSliderProps","dataCube","dataMean","map","item","Math","round","maxWidth","minWidth","boxSizing","heigth","colors","marginTop","bind","marginBottom","fontSize","color","label","display","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Histogram from './Histogram/Histogram.jsx';\nimport Rheostat from 'rheostat'\n\n\nexport default class HistogramSlider extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: [this.props.value[0], this.props.value[1]]\n    }\n    this.timeout = 0\n  };\n\n\n  componentWillReceiveProps(nextProps) {\n    const { value } = nextProps;\n    if (value !== this.props.value) {\n      this.setState({ value });\n    }\n  }\n\n  reset(e) {\n    e.preventDefault();\n    this.setState({ value: [this.props.min, this.props.max] }, () => {\n      if (typeof this.props.onApply === 'function') {\n        this.props.onApply(this.state.value);\n      } else if (typeof this.props.onChange === 'function') {\n        this.props.onChange(this.state.value);\n      }\n    });\n  };\n\n  isDisabled() {\n    return (\n      this.state.value[0] === this.props.min &&\n      this.state.value[1] === this.props.max\n    );\n  };\n\n  handleSliderChange(value) {\n    this.setState({ value: value.values });\n    this.props.onChange(value.values)\n    /*\n        if (typeof this.props.onChange === 'function') {\n          if (this.timeout) {\n            window.clearTimeout(this.timeout);\n          }\n          this.timeout = window.setTimeout(() => {\n            //@ts-ignore: has been checked outsite\n            this.props.onChange(value);\n          }, this.props.debounceDelay || 500);\n        }*/\n  };\n\n  handleApply(e) {\n    e.preventDefault();\n    if (typeof this.props.onApply === 'function') {\n      this.props.onApply(this.state.value);\n    }\n  };\n\n  render() {\n    if (this.props.min >= this.props.max) {\n      console.error(\n        `The prop \"min\" should not be greater than the props \"max\".`,\n      );\n      return null;\n    }\n\n    if (this.props.value[0] >= this.props.value[1]) {\n      console.error(\n        `The [0] of the prop \"value\" should not be greater than the [1].`,\n      );\n      return null;\n    }\n\n    const isDisabled = this.isDisabled();\n    const { data, ...rangeSliderProps } = this.props;\n    let dataCube = []\n    let dataMean = []\n    //let divVal = Math.round(this.props.data.length / (this.props.cubeSize > 0 ? this.props.cubeSize : 50))\n    //this.props.data.forEach((element, index) => {\n    /* if (index % divVal == 0) {\n       let val = 0;\n       dataMean.forEach(item => {\n         val += item\n       })\n       dataCube.push(parseFloat(val) * parseFloat(divVal) / 100.0)\n       dataMean = []\n     } else {\n       dataMean.push(element);\n     }\n\n   })*/\n    dataCube = this.props.data.map(item => {\n      return Math.round(item)\n    })\n    return (\n      <div\n        style={{\n          maxWidth: '100%',\n          minWidth: '100%',\n          boxSizing: 'border-box',\n          heigth: '30px',\n    \n        }}\n      >\n        <Histogram\n          maxHeightPx=\"40\"\n          colors={this.props.colors}\n          data={dataCube}\n          value={this.state.value}\n          min={this.props.min}\n          max={this.props.max}\n\n        />\n        <div style={{ marginTop: '-5px' }}>\n          <Rheostat\n            min={this.props.min}\n            max={this.props.max}\n            onValuesUpdated={this.handleSliderChange.bind(this)}\n            values={[this.state.value[0], this.state.value[1]]} />\n\n        </div>\n        <div className={{ marginTop: '20px' }}>\n          <div\n            style={{\n              marginBottom: '10px',\n              fontSize: '12px',\n              color: '#666666',\n            }}\n          >\n            {this.props.label}\n          </div>\n\n          {typeof this.props.onApply === 'function' && (\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: isDisabled ? 'flex-end' : 'space-between',\n              }}\n            >\n              {!isDisabled && (\n                <button onClick={this.reset} disabled={isDisabled}>\n                  Reset\n                    </button>\n              )}\n              <button onClick={this.handleApply.bind(this)}>Apply</button>\n            </div>\n          )}\n        </div>\n      </div>\n\n    );\n  }\n}\n"],"file":"HistogramSlider.js"}