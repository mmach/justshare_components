{"version":3,"sources":["../../../src/Components/MapForm/index.jsx"],"names":["L","React","Autocomplete","geolocated","Map","Marker","Popup","TileLayer","connect","Button","Col","Form","FormGroup","Input","Label","Row","CommandList","Enums","Translator","QueryList","BaseService","ButtonLoader","SET_LATLNG_ACTIONS","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapForm","Component","constructor","props","state","zoom","countryValue","regionValue","cityValue","address","markers","zipcode","countries","cities","step","validation","setLonLat","timeout","png","icon","color","myIcon","divIcon","html","iconSize","iconAnchor","popupAnchor","className","myIconResults","refreshValidation","toRefresh","setTimeout","componentDidMount","readOnly","setState","longitude","coords","latitude","getCountries","then","succ","data","auth","user","getUserCountry","id","country_id","name","city","cityId","city_id","countryId","onChange","countryHander","event","target","value","regionId","clearTimeout","length","console","log","cityHander","getCities","citySelect","val","forEach","item","countrySelect","onZoom","map","viewport","addMarker","latlng","lng","lat","getReverseByLatLng","country","streetName","streetNumber","submitHandler","onSubmit","setCoordinate","json","JSON","parse","getAttribute","refreshGeolocation","getAddress","getUsersCoordinate","render","tran","codeDict","LABEL","lang","phTrans","PLACEHOLDER","undefined","size","bind","ref","filter","stringify","translate","countryForm","label","isHighlighted","background","Object","assign","borderRadius","boxShadow","padding","fontSize","position","overflow","maxHeight","zIndex","menuStyle","style","width","autoComplete","placeholder","cityForm","population","rank","RANK","objA","objB","Number","body","form_header","form_text","guid","isLoading","mapStateToProps","DictionaryReducer","LanguageReducer","SetLatlngReducer","AuthReducer","mapDispatchToProps","dispatch","dto","queryThunt","Country","GET_COUNTRY","LOADER","SET_CONTAINER_ACTION","City","GET_CITY","REVERSE_GEO","REVERSE_LATLNG_GEO","GET_COUNTRY_BY_ID","setLatLng","User","SET_COORDIATES","USER_INFO","localStorage","token","positionOptions","enableHighAccuracy","userDecisionTimeout"],"mappings":"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","sourcesContent":["/*\r\n    ./client/components/App.jsx\r\n*/\r\n\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport React from 'react';\r\nimport Autocomplete from 'react-autocomplete';\r\nimport { geolocated } from 'react-geolocated';\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\r\nimport 'react-leaflet-markercluster/dist/styles.min.css'; // sass\r\nimport { connect } from 'react-redux';\r\nimport { Button, Col, Form, FormGroup, Input, Label, Row } from 'reactstrap';\r\nimport CommandList from '../../Shared/CommandList.js';\r\nimport { Enums, Translator } from '../../Shared/index.js';\r\nimport QueryList from '../../Shared/QueryList.js';\r\nimport { BaseService } from './../../App/index.js';\r\nimport { ButtonLoader } from './../index.js';\r\nimport SET_LATLNG_ACTIONS from '../../Scenes/User/Scenes/SetLatlng/actions.js';\r\n\r\n\r\n\r\n\r\n//import { Map } from 'react-leaflet';\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nclass MapForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            zoom: 16,\r\n            countryValue: '',\r\n            regionValue: '',\r\n            cityValue: '',\r\n            address: '',\r\n            markers: [],\r\n            zipcode: '',\r\n            countries: [],\r\n            cities: []\r\n        }\r\n\r\n        this.step = 1;\r\n        this.state.validation = [];\r\n        this.state.setLonLat = false;\r\n        this.timeout = null;\r\n\r\n\r\n        var png = require(`./../../assets/markers/${props.icon}.png`)\r\n        let color = '#ff7c7c'\r\n        this.myIcon = L.divIcon({\r\n            html: `\r\n            <svg viewBox=\"0 0 80 80\" width=\"40\" height=\"70\" style=\"overflow: visible;\">\r\n                <defs>\r\n                    <filter height=\"200%\" width=\"200%\" y=\"-50%\" x=\"-50%\" id=\"svg_5_blur\">\r\n                        <feGaussianBlur stdDeviation=\"4.7\" in=\"SourceGraphic\"/>\r\n                    </filter>\r\n                    <filter height=\"200%\" width=\"200%\" y=\"-50%\" x=\"-50%\" id=\"svg_9_blur\">\r\n                        <feGaussianBlur stdDeviation=\"3.9\" in=\"SourceGraphic\"/>\r\n                    </filter>\r\n                </defs>\r\n                <style>\r\n                    .small { font: italic 13px sans-serif; }\r\n                    .heavyText {font: 500 30px sans-serif; text-align:center }\r\n                \r\n                    /* Note that the color of the text is set with the    *\r\n                    * fill property, the color property is for HTML only */\r\n                    .Rrrrr { font: italic 40px serif; fill: red; }\r\n              </style>\r\n            \r\n                <g>\r\n                <ellipse filter=\"url(#svg_5_blur)\" opacity=\"0.4\" ry=\"11\" rx=\"27.5\" id=\"svg_5\" cy=\"83\" cx=\"35.5\" stroke-width=\"1.5\" stroke=\"#8e8e8e\" fill=\"#a07d7d\"/>\r\n                <ellipse filter=\"url(#svg_9_blur)\" opacity=\"0.3\" ry=\"8\" rx=\"9\" id=\"svg_9\" cy=\"83\" cx=\"35.5\" stroke-width=\"1.5\" stroke=\"#8e8e8e\" fill=\"#665151\"/>\r\n                <rect stroke=\"${color}\" transform=\"rotate(45 34.75000000000003,52.249999999999986) \" id=\"svg_7\" height=\"38.606601\" width=\"42\" y=\"32.9467\" x=\"13.75\" fill-opacity=\"null\" stroke-opacity=\"null\" stroke-width=\"1.5\" fill=\"${color}\"/>\r\n                <ellipse stroke=\"${color}\" ry=\"33\" rx=\"34\" id=\"svg_2\" cy=\"34.9375\" cx=\"35.5\" stroke-width=\"1.5\" fill=\"${color}\"/>\r\n                <ellipse stroke=\"${color}\" ry=\"25.235295\" rx=\"26\" id=\"svg_3\" cy=\"35.702206\" cx=\"35.5\" fill-opacity=\"null\" stroke-width=\"1.5\" fill=\"#fff\"/>\r\n                <image xlink:href=\"${png}\" id=\"svg_4\" height=\"32\" width=\"32\" y=\"18\" x=\"20\"/>\r\n               </g>\r\n            </object>`,\r\n            iconSize: [30, 40],\r\n            iconAnchor: [15, 35], // point of the icon which will correspond to marker's location\r\n            popupAnchor: [0, -35],\r\n            className: 'marker-cluster-custom'\r\n\r\n        });\r\n        color = '#4DB1CF'\r\n        this.myIconResults = L.divIcon({\r\n            html: `\r\n            <svg viewBox=\"0 0 80 80\" width=\"40\" height=\"70\" style=\"overflow: visible;\">\r\n                <defs>\r\n                    <filter height=\"200%\" width=\"200%\" y=\"-50%\" x=\"-50%\" id=\"svg_5_blur\">\r\n                        <feGaussianBlur stdDeviation=\"4.7\" in=\"SourceGraphic\"/>\r\n                    </filter>\r\n                    <filter height=\"200%\" width=\"200%\" y=\"-50%\" x=\"-50%\" id=\"svg_9_blur\">\r\n                        <feGaussianBlur stdDeviation=\"3.9\" in=\"SourceGraphic\"/>\r\n                    </filter>\r\n                </defs>\r\n                <style>\r\n                    .small { font: italic 13px sans-serif; }\r\n                    .heavyText {font: 500 30px sans-serif; text-align:center }\r\n                \r\n                    /* Note that the color of the text is set with the    *\r\n                    * fill property, the color property is for HTML only */\r\n                    .Rrrrr { font: italic 40px serif; fill: red; }\r\n              </style>\r\n            \r\n                <g>\r\n                <ellipse filter=\"url(#svg_5_blur)\" opacity=\"0.4\" ry=\"11\" rx=\"27.5\" id=\"svg_5\" cy=\"83\" cx=\"35.5\" stroke-width=\"1.5\" stroke=\"#8e8e8e\" fill=\"#a07d7d\"/>\r\n                <ellipse filter=\"url(#svg_9_blur)\" opacity=\"0.3\" ry=\"8\" rx=\"9\" id=\"svg_9\" cy=\"83\" cx=\"35.5\" stroke-width=\"1.5\" stroke=\"#8e8e8e\" fill=\"#665151\"/>\r\n                <rect stroke=\"${color}\" transform=\"rotate(45 34.75000000000003,52.249999999999986) \" id=\"svg_7\" height=\"38.606601\" width=\"42\" y=\"32.9467\" x=\"13.75\" fill-opacity=\"null\" stroke-opacity=\"null\" stroke-width=\"1.5\" fill=\"${color}\"/>\r\n                <ellipse stroke=\"${color}\" ry=\"33\" rx=\"34\" id=\"svg_2\" cy=\"34.9375\" cx=\"35.5\" stroke-width=\"1.5\" fill=\"${color}\"/>\r\n                <ellipse stroke=\"${color}\" ry=\"25.235295\" rx=\"26\" id=\"svg_3\" cy=\"35.702206\" cx=\"35.5\" fill-opacity=\"null\" stroke-width=\"1.5\" fill=\"#fff\"/>\r\n                <image xlink:href=\"${png}\" id=\"svg_4\" height=\"32\" width=\"32\" y=\"18\" x=\"20\"/>\r\n               </g>\r\n            </object>`,\r\n            iconSize: [30, 40],\r\n            iconAnchor: [15, 35], // point of the icon which will correspond to marker's location\r\n            popupAnchor: [0, -35],\r\n            className: 'marker-cluster-custom'\r\n\r\n        });\r\n\r\n    }\r\n    refreshValidation() {\r\n        if (this.state.toRefresh) {\r\n            setTimeout(() => {\r\n                this.validation();\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.readOnly == true) {\r\n            this.setState({\r\n                longitude: this.props.coords.longitude,\r\n                latitude: this.props.coords.latitude\r\n            });\r\n            return;\r\n        }\r\n        this.props.getCountries().then(succ => {\r\n            this.setState({\r\n                countries: succ.data\r\n            })\r\n        }\r\n        );\r\n\r\n\r\n        if (this.props.auth.user && this.props.auth.user.longitude != 0 && this.props.auth.user.latitude != 0) {\r\n            this.setState({\r\n                longitude: this.props.auth.user.longitude,\r\n                latitude: this.props.auth.user.latitude\r\n            });\r\n            this.props.getUserCountry({ id: this.props.auth.user.country_id }).then(succ => {\r\n                this.setState({\r\n                    countryValue: succ.data.name,\r\n                    address: this.props.auth.user.address,\r\n                    zipcode: this.props.auth.user.zipcode,\r\n                    cityValue: this.props.auth.user.city,\r\n                    cityId: this.props.auth.user.city_id,\r\n                    countryId: this.props.auth.user.country_id,\r\n\r\n                    markers: []\r\n\r\n                })\r\n                this.props.onChange ? this.props.onChange(this.state) : null;\r\n\r\n            })\r\n            return\r\n        } else {\r\n\r\n\r\n\r\n            if (this.props.coords && this.longitude == 0 && this.latitude == 0) {\r\n\r\n                this.setState({\r\n                    longitude: this.props.coords.longitude,\r\n                    latitude: this.props.coords.latitude\r\n                });\r\n\r\n            } else {\r\n                this.setState({\r\n                    longitude: 0,\r\n                    latitude: 0\r\n                });\r\n            }\r\n        }\r\n    }\r\n    countryHander(event) {\r\n        this.setState({\r\n            countryValue: event.target.value,\r\n            regionValue: '',\r\n            cityValue: '',\r\n            regionId: '',\r\n            cityId: '',\r\n            address: '',\r\n            markers: [],\r\n            zipcode: ''\r\n\r\n        });\r\n        let name = event.target.value\r\n\r\n        clearTimeout(this.timeout ? this.timeout : 0);\r\n        if (name.length > 2) {\r\n            this.timeout = setTimeout(() => {\r\n                console.log('request');\r\n                this.props.getCountries({ name: name }).then(succ => {\r\n                    if (succ.data.length == 1) {\r\n                        this.setState({\r\n                            countryValue: succ.data[0].name,\r\n                            countryId: succ.data[0].id,\r\n                            countries: [],\r\n                            cities: []\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            countries: succ.data,\r\n                            cities: []\r\n                        })\r\n                    }\r\n\r\n                }\r\n                );\r\n            }, 500)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    cityHander(event) {\r\n        this.setState({\r\n            cityValue: event.target.value,\r\n            countries: []\r\n        });\r\n        let name = event.target.value\r\n\r\n        clearTimeout(this.timeout ? this.timeout : 0);\r\n        if (name.length > 2) {\r\n            this.timeout = setTimeout(() => {\r\n                console.log('request');\r\n                this.props.getCities({ country_id: this.state.countryId, name: name }).then(succ => {\r\n                    if (succ.data.length == 1) {\r\n                        this.setState({\r\n                            cityValue: succ.data[0].name,\r\n                            cities: [],\r\n                            cityId: succ.data[0].id\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            cities: succ.data\r\n                        })\r\n                    }\r\n                }\r\n                );;\r\n            }, 500)\r\n        }\r\n    }\r\n    citySelect(val) {\r\n        this.state.cities.forEach(item => {\r\n            console.log(val);\r\n\r\n            if (item.name == val) {\r\n\r\n                this.setState({\r\n                    cityValue: val,\r\n                    cityId: item.id,\r\n                    setLonLat: true,\r\n                    latitude: item.latitude,\r\n                    longitude: item.longitude,\r\n                    zoom: 9,\r\n                    address: '',\r\n                    zipcode: '',\r\n                    markers: []\r\n                });\r\n\r\n            }\r\n        })\r\n\r\n        //this.props.getCountries({name:event.target.value});\r\n    }\r\n    countrySelect(val) {\r\n        this.state.countries.forEach(item => {\r\n            console.log(val);\r\n\r\n            if (item.name == val) {\r\n\r\n                console.log(val);\r\n                this.setState({\r\n                    countryValue: val,\r\n                    countryId: item.id,\r\n                    setLonLat: true,\r\n                    latitude: item.latitude,\r\n                    longitude: item.longitude,\r\n                    regionValue: '',\r\n                    regionId: '',\r\n                    cityValue: '',\r\n                    cityId: '',\r\n                    zoom: 3,\r\n                    address: '',\r\n                    zipcode: '',\r\n                    markers: []\r\n                });\r\n                //   this.props.getCities({ country_id: item.id, name: name });\r\n                return\r\n            }\r\n        })\r\n\r\n        //this.props.getCountries({name:event.target.value});\r\n    }\r\n    //setLanguga()\r\n\r\n    onZoom(event) {\r\n\r\n        if (this.map) {\r\n            this.setState({\r\n                zoom: this.map.viewport.zoom\r\n            })\r\n        }\r\n    }\r\n\r\n    addMarker(event) {\r\n        if (this.props.readOnly == true) {\r\n\r\n            return;\r\n        }\r\n        this.setState({\r\n            longitude: event.latlng.lng,\r\n            latitude: event.latlng.lat,\r\n            setLonLat: true,\r\n        });\r\n        this.props.getReverseByLatLng({\r\n            longitude: event.latlng.lng,\r\n            latitude: event.latlng.lat\r\n        }).then(succ => {\r\n            this.setState({\r\n                cityValue: succ.data[0].city,\r\n                countryValue: succ.data[0].country,\r\n                countryId: succ.data[0].country_id,\r\n                cityId: succ.data[0].city_id,\r\n                address: (succ.data[0].streetName ? succ.data[0].streetName : '') + \" \" + (succ.data[0].streetNumber ? \" \" + succ.data[0].streetNumber : \"\"),\r\n                zipcode: succ.data[0].zipcode ? succ.data[0].zipcode : ''\r\n\r\n            })\r\n            this.props.onChange ? this.props.onChange(this.state) : null;\r\n\r\n        })\r\n    }\r\n    submitHandler(event) {\r\n        if (this.props.coords && this.state.longitude == 0 && this.state.latitude == 0) {\r\n            this.state.longitude = this.props.coords.longitude,\r\n                this.state.latitude = this.props.coords.latitude\r\n\r\n        }\r\n        this.state.city_id = this.state.cityId;\r\n        this.state.country_id = this.state.countryId;\r\n        this.state.city = this.state.cityValue;\r\n        this.props.onSubmit(this.state);\r\n        /*  this.props.setLatLng(this.state).then(succ => {\r\n              this.props.setNotification(Enums.CODE.SUCCESS_GLOBAL,\r\n                  Translator(this.props.codeDict.data.SUCCESS_GLOBAL, this.props.lang).translate('SET_LANG_SAVE_SUCCESS')\r\n              );\r\n          })*/\r\n\r\n    }\r\n    setCoordinate(event) {\r\n        let json = JSON.parse(event.target.getAttribute('data-tag'));\r\n        this.setState(\r\n            {\r\n                markers: [],\r\n                longitude: json.longitude,\r\n                latitude: json.latitude,\r\n                address: (json.streetName ? json.streetName : '') + \" \" + (json.streetNumber ? \" \" + json.streetNumber : \"\"),\r\n                zipcode: json.zipcode ? json.zipcode : ''\r\n            }\r\n        );\r\n        this.props.onChange ? this.props.onChange(this.state) : null;\r\n\r\n    }\r\n    refreshGeolocation(event) {\r\n        this.setState({\r\n            markers: [],\r\n            longitude: this.props.coords.longitude,\r\n            latitude: this.props.coords.latitude\r\n        });\r\n        this.props.getReverseByLatLng({\r\n            longitude: this.props.coords.longitude,\r\n            latitude: this.props.coords.latitude\r\n        }).then(succ => {\r\n            this.setState({\r\n                cityValue: succ.data[0].city,\r\n                countryValue: succ.data[0].country,\r\n                countryId: succ.data[0].country_id,\r\n                cityId: succ.data[0].city_id,\r\n                address: (succ.data[0].streetName ? succ.data[0].streetName : '') + \" \" + (succ.data[0].streetNumber ? \" \" + succ.data[0].streetNumber : \"\"),\r\n                zipcode: succ.data[0].zipcode ? succ.data[0].zipcode : ''\r\n\r\n            })\r\n            this.props.onChange ? this.props.onChange(this.state) : null;\r\n            ;\r\n        })\r\n\r\n    }\r\n    getAddress(event) {\r\n\r\n        this.setState({\r\n            address: event.target.value\r\n        })\r\n        let address = event.target.value\r\n        clearTimeout(this.timeout ? this.timeout : 0);\r\n        if (address.length > 2) {\r\n            this.timeout = setTimeout(() => {\r\n                console.log('request');\r\n                this.props.getAddress({\r\n                    city: this.state.cityValue,\r\n                    address: address,\r\n                    country: this.state.countryValue\r\n                }).then(succ => {\r\n                    if (succ.data.length == 1) {\r\n                        this.setState({\r\n                            longitude: succ.data[0].longitude,\r\n                            latitude: succ.data[0].latitude,\r\n                            address: (succ.data[0].streetName ? succ.data[0].streetName : '') + \" \" + (succ.data[0].streetNumber ? \" \" + succ.data[0].streetNumber : \"\"),\r\n                            zipcode: succ.data[0].zipcode ? succ.data[0].zipcode : '',\r\n                            markers: []\r\n\r\n                        });\r\n                        this.props.onChange ? this.props.onChange(this.state) : null;\r\n\r\n                    } else {\r\n                        this.setState({\r\n                            markers: succ.data.length > 0 ? succ.data : []\r\n                        });\r\n                    }\r\n\r\n                })\r\n            }, 500)\r\n        }\r\n    }\r\n\r\n    getUsersCoordinate() {\r\n        this.props.getUserCountry({ id: this.props.auth.user.country_id }).then(succ => {\r\n            this.setState({\r\n                countryValue: succ.data.name,\r\n                longitude: this.props.auth.user.longitude,\r\n                latitude: this.props.auth.user.latitude,\r\n                address: this.props.auth.user.address,\r\n                zipcode: this.props.auth.user.zipcode,\r\n                cityValue: this.props.auth.user.city,\r\n                cityId: this.props.auth.user.city_id,\r\n                countryId: this.props.auth.user.country_id,\r\n\r\n                markers: []\r\n\r\n            })\r\n            this.props.onChange ? this.props.onChange(this.state) : null;\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const tran = Translator(this.props.codeDict.data.LABEL, this.props.lang);\r\n        const phTrans = Translator(this.props.codeDict.data.PLACEHOLDER, this.props.lang);\r\n        this.refreshValidation();\r\n        let latlng = [0, 0];\r\n        if (this.props.coords) {\r\n            if (this.state.setLonLat == 1) {\r\n                latlng = [this.state.latitude, this.state.longitude];\r\n            } else if (this.state.latitude != undefined && this.state.longitude != undefined && this.state.latitude != 0 && this.state.longitude != 0) {\r\n                latlng = [this.state.latitude, this.state.longitude];\r\n            } else {\r\n                latlng = [this.props.coords.latitude, this.props.coords.longitude];\r\n            }\r\n        } else if (this.state.latitude && this.state.longitude) {\r\n            latlng = [this.state.latitude, this.state.longitude]\r\n        }\r\n        console.log(latlng);\r\n        //let latlng = this.props.coords ? this.state.setLonLat == 1 ? [this.state.latitude, this.state.longitude] : [this.props.coords.latitude, this.props.coords.longitude] : [this.state.latitude, this.state.longitude]\r\n        let map = <Map className={this.props.size?this.props.size:\"size-map-300px\"} center={latlng} zoom={this.state.zoom} onzoomend={this.onZoom.bind(this)} onclick={this.addMarker.bind(this)}\r\n            ref={(ref) => { this.map = ref; }}\r\n\r\n        >\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            {this.state.markers ? this.state.markers.filter(item => {\r\n                return item.streetName != undefined\r\n            }).map(item => {\r\n\r\n                return (<Marker position={[item.latitude, item.longitude]} icon={this.myIconResults}>\r\n                    <Popup>\r\n                        <Row>\r\n                            {item.city + \", \" + item.zipcode}<br />\r\n                            {(item.streetName ? item.streetName : \"\") + \" \" + (item.streetNumber ? item.streetNumber : \"\")}<br />\r\n\r\n                            <Button data-tag={JSON.stringify(item)} value={tran.translate('SET_COORDINATE_QUERY_LINK')} onClick={this.setCoordinate.bind(this)} size={\"sm\"} className=\"g-mt-10 btn g-brd-none u-btn-primary rounded-0 g-letter-spacing-1 g-font-weight-700 g-font-size-12 text-uppercase\">\r\n                                {tran.translate('SET_COORDINATE_QUERY_LINK')}\r\n                            </Button>\r\n\r\n\r\n                        </Row>\r\n                    </Popup>\r\n                </Marker>)\r\n            }) : <span></span>}\r\n            <Marker position={latlng} icon={this.myIcon}>\r\n\r\n            </Marker>\r\n\r\n        </Map>\r\n\r\n        let value = \"\";\r\n        let countryForm = <Autocomplete\r\n            getItemValue={(item) => item.label}\r\n            items={this.state.countries.map(item => {\r\n                return {\r\n                    label: item.name\r\n                }\r\n            })}\r\n            renderItem={(item, isHighlighted) =>\r\n                <div className=\"menuAutocompleteElement\" style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\r\n                    {item.label}\r\n                </div>\r\n            }\r\n            menuStyle={Object.assign({\r\n                borderRadius: '3px',\r\n                boxShadow: '0 2px 12px rgba(0, 0, 0, 0.1)',\r\n                background: 'rgba(255, 255, 255, 0.9)',\r\n                padding: '2px 0',\r\n                fontSize: '90%',\r\n                position: 'fixed',\r\n                overflow: 'auto',\r\n                maxHeight: '50%', // TODO: don't cheat, let it flow to the bottom\r\n                zIndex: '2000'\r\n            }, this.props.menuStyle)}\r\n            inputProps={{ className: ' form-control', style: { width: '100%' }, autoComplete: false, placeholder: phTrans.translate('SETLATLNG_COUNTRY_PLACEHOLDER') }}\r\n            wrapperStyle={{ width: '100%' }}\r\n            value={this.state.countryValue}\r\n            onChange={this.countryHander.bind(this)}\r\n            onSelect={this.countrySelect.bind(this)}\r\n        />\r\n\r\n        let cityForm = <Autocomplete\r\n            getItemValue={(item) => item.label}\r\n            items={this.state.cities.map(item => {\r\n                return {\r\n                    label: item.name,\r\n                    population: item.population,\r\n                    rank: item.RANK\r\n                }\r\n            })}\r\n            renderItem={(item, isHighlighted) =>\r\n                <div className=\"menuAutocompleteElement\" style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\r\n                    {item.label}\r\n                </div>\r\n            }\r\n            menuStyle={Object.assign({\r\n                borderRadius: '3px',\r\n                boxShadow: '0 2px 12px rgba(0, 0, 0, 0.1)',\r\n                background: 'rgba(255, 255, 255, 0.9)',\r\n                padding: '2px 0',\r\n                fontSize: '90%',\r\n                position: 'fixed',\r\n                overflow: 'auto',\r\n                maxHeight: '50%', // TODO: don't cheat, let it flow to the bottom\r\n                zIndex: '2000'\r\n            }, this.props.menuStyle)}\r\n            sortItems={(objA, objB) => {\r\n                console.log(objA);\r\n                console.log(objB)\r\n                return Number(objB.population) > Number(objA.population) ? 1 : -1\r\n            }}\r\n            inputProps={{ className: ' form-control', style: { width: '100%' }, autoComplete: false, placeholder: phTrans.translate('SETLATLNG_CITY_PLACEHOLDER') }}\r\n            wrapperStyle={{ width: '100%' }}\r\n            value={this.state.cityValue}\r\n            onChange={this.cityHander.bind(this)}\r\n            onSelect={this.citySelect.bind(this)}\r\n        />\r\n        // g-brd-around g-brd-gray-light-v3 g-pa-30 g-mb-10 \r\n        let body = <Form className=\" g-pa-20\">\r\n            <Col className=\"text-center mx-auto g-mb-10\">\r\n                {this.props.form_header ? (<h5 className=\"h6 text-uppercase g-letter-spacing-2 g-font-weight-600 text-uppercase text-center  g-color-gray-dark-v4 g-mb-15\">{this.props.form_header}{/*tran.translate('SETLATLNG_FORM_HEADER')*/}</h5>\r\n                ) : <span></span>}\r\n                {this.props.form_text ? <Label className=\"g-line-height-1_8 g-letter-spacing-1  g-mb-10\">{this.props.form_text}{/*tran.translate('SETLATLNG_FORM_TEXT')*/}</Label> : <span></span>}\r\n            </Col>\r\n            <FormGroup >\r\n                <Row>\r\n                    <Col class=\"col-3\">\r\n\r\n                        <Label for={this.state.guid} >{tran.translate('SETLATLNG_COUNTRY_LABEL')}</Label>\r\n\r\n                    </Col>\r\n                    <Col class=\"col-6\">\r\n                        {countryForm}\r\n                    </Col>\r\n                </Row>\r\n            </FormGroup>\r\n\r\n            <FormGroup >\r\n                <Row>\r\n                    <Col class=\"col-3\">\r\n\r\n                        <Label for={this.state.guid} >{tran.translate('SETLATLNG_CITY_LABEL')}</Label>\r\n                    </Col>\r\n                    <Col class=\"col-6\">\r\n                        {this.state.countryId != undefined && this.state.countryId != '' ? cityForm : <span></span>}\r\n                    </Col>\r\n                </Row>\r\n            </FormGroup>\r\n            <FormGroup >\r\n                <Row>\r\n                    <Col class=\"col-3\">\r\n\r\n                        <Label >{tran.translate('SETLATLNG_ADDRESS_LABEL')}</Label>\r\n                    </Col>\r\n                    <Col class=\"col-6\">\r\n                        {this.state.cityValue != undefined && this.state.cityValue != '' ?\r\n                            <Input className=\"form-control rounded-0\" type=\"search\" value={this.state.address} id={this.state.guid} onChange={this.getAddress.bind(this)} placeholder={phTrans.translate('SETLATLNG_ADDRESS_PLACEHOLDER')} />\r\n\r\n                            : <span></span>}\r\n                    </Col>\r\n                </Row>\r\n            </FormGroup>\r\n            <FormGroup >\r\n                <Row>\r\n                    {map}\r\n                </Row>\r\n            </FormGroup>\r\n            <br />\r\n\r\n            {this.props.coords ? <ButtonLoader onClick={this.refreshGeolocation.bind(this)} size={\"md\"} className={\"btn rounded-0 g-letter-spacing-1 g-font-weight-700 g-font-size-12 text-uppercase g-mr-10 \"} value={tran.translate('REFRESH_GEO_BUTTON_LABEL')} /> : <span></span>}\r\n\r\n            {this.props.onSubmit ? <ButtonLoader disabled={this.state.zipcode == '' || this.state.zipcode == undefined} onClick={this.submitHandler.bind(this)} size={\"md\"} className={\"btn g-brd-none u-btn-primary rounded-0 g-letter-spacing-1 g-font-weight-700 g-font-size-12 text-uppercase\"} value={tran.translate('SET_COORDINATES_BUTTON_LABEL')} isLoading={this.props.latlng.isLoading} />\r\n                : <span></span>}\r\n            {this.props.onChange ? <ButtonLoader onClick={this.getUsersCoordinate.bind(this)} size={\"md\"} className={\"btn rounded-0 g-letter-spacing-1 g-font-weight-700 g-font-size-12 text-uppercase \"} value={tran.translate('SET_FROM_USER_COORIDNATE')} isLoading={this.props.latlng.isLoading} />\r\n                : <span></span>}\r\n        </Form >\r\n        if (this.props.readOnly == true) {\r\n            return (map)\r\n        } else {\r\n            return body\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        codeDict: state.DictionaryReducer,\r\n        lang: state.LanguageReducer,\r\n        latlng: state.SetLatlngReducer,\r\n        auth: state.AuthReducer\r\n\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getCountries: (dto) => {\r\n            return dispatch(new BaseService().queryThunt(QueryList.Country.GET_COUNTRY, dto, null, Enums.LOADER.SET_CONTAINER_ACTION))\r\n        },\r\n\r\n        getCities: (dto) => {\r\n            return dispatch(new BaseService().queryThunt(QueryList.City.GET_CITY, dto, null, Enums.LOADER.SET_CONTAINER_ACTION))\r\n        },\r\n        getAddress: (dto) => {\r\n            return dispatch(new BaseService().queryThunt(QueryList.City.REVERSE_GEO, dto))\r\n        },\r\n        getReverseByLatLng: (dto) => {\r\n            return dispatch(new BaseService().queryThunt(QueryList.City.REVERSE_LATLNG_GEO, dto))\r\n\r\n        }\r\n        ,\r\n        getUserCountry: (dto) => {\r\n            return dispatch(new BaseService().queryThunt(QueryList.Country.GET_COUNTRY_BY_ID, dto))\r\n\r\n        },\r\n        setLatLng: (dto) => {\r\n            return dispatch(new BaseService().queryThunt(CommandList.User.SET_COORDIATES, dto, null, Enums.LOADER.SET_CONTAINER_ACTION)).then(succ => {\r\n                return dispatch(new BaseService().queryThunt(QueryList.User.USER_INFO, {}, localStorage.token));\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default geolocated({\r\n    positionOptions: {\r\n        enableHighAccuracy: false,\r\n    },\r\n    userDecisionTimeout: 5000,\r\n})(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MapForm)); \r\n"],"file":"index.js"}