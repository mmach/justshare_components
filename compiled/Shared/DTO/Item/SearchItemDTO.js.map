{"version":3,"sources":["../../../../src/Shared/DTO/Item/SearchItemDTO.js"],"names":["BaseDTO","Validator","SearchItemDTO","constructor","categoryList","freetext","distance","city","country","page","size","user_id","lat","lon","tag","undefined","startDate","endDate","createdInterval","catOptions","validation","state","prepareSearch","text","wildecard","length","wildecardChar","trim","cleaned","replace","split","filter","item","join","form","equal","equal_wildecard","near","map","form_whole","wildecards","query"],"mappings":"AAAA;AACA;;AACA,OAAOA,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,eAAe,MAAMC,aAAN,SAA4BF,OAA5B,CAAoC;AACjDG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,IAAL,GAAY,CAAZ;AACA,SAAKC,IAAL,GAAY,CAAZ;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,GAAL,GAAW,CAAX;AACA,SAAKC,GAAL,GAAW,CAAX;AACA,SAAKC,GAAL,GAAWC,SAAX;AACA,SAAKC,SAAL,GAAiBD,SAAjB;AACA,SAAKE,OAAL,GAAeF,SAAf;AACA,SAAKG,eAAL,GAAqBH,SAArB;AACA,SAAKI,UAAL,GAAgBJ,SAAhB;AACD;;AACDK,EAAAA,UAAU,CAACC,KAAD,EAAQ,CAEjB;;AACDC,EAAAA,aAAa,CAACC,IAAD,EAAOC,SAAP,EAAkB;AAE7B,QAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnB,aAAO,EAAP;AACD;;AACD,QAAIC,aAAa,GAAGF,SAAS,IAAI,CAAb,GAAiB,GAAjB,GAAuB,EAA3C;AAEA,QAAInB,QAAQ,GAAGkB,IAAI,CAACI,IAAL,EAAf;AACA,QAAIC,OAAO,GAAGvB,QAAQ,CAACwB,OAAT,CAAiB,sBAAjB,EAAyC,GAAzC,EAA8CC,KAA9C,CAAoD,GAApD,EAAyDC,MAAzD,CAAgEC,IAAI,IAAI;AAAE,aAAOA,IAAP;AAAa,KAAvF,EAAyFC,IAAzF,CAA8F,GAA9F,CAAd;AACA,QAAIvB,IAAI,GAAGkB,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmBL,MAA9B;AAEA,QAAIS,IAAI,GAAG,IAAX;AACA,QAAIC,KAAK,GAAG,IAAZ;AACA,QAAIC,eAAe,GAAG,IAAtB;AACA,QAAIC,IAAI,GAAG,IAAX;;AACA,QAAI3B,IAAI,GAAG,CAAX,EAAc;AACZ;AACAwB,MAAAA,IAAI,GAAGN,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmBQ,GAAnB,CAAuBN,IAAI,IAAI;AACpC,YAAIA,IAAI,CAACP,MAAL,GAAc,CAAlB,EAAqB;AACnB,iBAAQ,yBAAwBO,IAAK,iBAArC;AACD,SAFD,MAGK;AACN,OALM,EAKJC,IALI,CAKC,GALD,CAAP;AAMAI,MAAAA,IAAI,GAAI,QAAOT,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmBC,MAAnB,CAA0BC,IAAI,IAAI;AAAE,eAAOA,IAAI,CAACP,MAAL,GAAc,CAArB;AAAwB,OAA5D,EAA8DQ,IAA9D,CAAmE,GAAnE,CAAwE,eAAvF;AACD,KAxB4B,CAyB7B;;;AAEA,QAAIM,UAAU,GAAI,yBAAwBX,OAAQ,iBAAlD;AACA,QAAIY,UAAJ;;AACA,QAAI9B,IAAI,IAAI,CAAZ,EAAe;AACbyB,MAAAA,KAAK,GAAI,GAAEP,OAAQ,cAAnB;;AACA,UAAIJ,SAAJ,EAAe;AACbY,QAAAA,eAAe,GAAI,GAAER,OAAQ,eAA7B;AACD;AACF;;AAED,QAAIa,KAAK,GAAG,CAACN,KAAD,EACVC,eADU,EAEVG,UAFU,EAGVL,IAHU,EAIVG,IAJU,EAKVN,MALU,CAKHC,IAAI,IAAI;AACf,aAAOA,IAAP;AACD,KAPW,EAOTC,IAPS,CAOJ,GAPI,CAAZ;AASA,WAAQ,WAAUQ,KAAM,GAAxB;AACD;;AApEgD","sourcesContent":["// @ts-nocheck\r\n\"use strict\";\r\nimport BaseDTO from \"../../BaseObjects/baseDTO\";\r\nimport Validator from \"better-validator\";\r\n\r\nexport default class SearchItemDTO extends BaseDTO {\r\n  constructor() {\r\n    super();\r\n    this.categoryList = [];\r\n    this.freetext = '';\r\n    this.distance = 0;\r\n    this.city = [];\r\n    this.country = 0;\r\n    this.page = 0;\r\n    this.size = 0;\r\n    this.user_id = null;\r\n    this.lat = 0;\r\n    this.lon = 0;\r\n    this.tag = undefined;\r\n    this.startDate = undefined;\r\n    this.endDate = undefined;\r\n    this.createdInterval=undefined;\r\n    this.catOptions=undefined;\r\n  }\r\n  validation(state) {\r\n\r\n  }\r\n  prepareSearch(text, wildecard) {\r\n\r\n    if (text.length < 2) {\r\n      return '';\r\n    }\r\n    let wildecardChar = wildecard == 1 ? '*' : '';\r\n\r\n    let freetext = text.trim();\r\n    let cleaned = freetext.replace(/[^a-zA-Z0-9À-ž_-\\s]/g, \" \").split(' ').filter(item => { return item }).join(' ');\r\n    let size = cleaned.split(' ').length;\r\n\r\n    let form = null;\r\n    let equal = null;\r\n    let equal_wildecard = null;\r\n    let near = null;\r\n    if (size > 1) {\r\n      //form single word\r\n      form = cleaned.split(' ').map(item => {\r\n        if (item.length > 2) {\r\n          return `FORMSOF(INFLECTIONAL,\"${item}\") weight(0.1) `;\r\n        }\r\n        else null\r\n      }).join(',')\r\n      near = `NEAR(${cleaned.split(' ').filter(item => { return item.length > 2 }).join(',')}) weight(0.6)`\r\n    }\r\n    //form\r\n\r\n    let form_whole = `FORMSOF(INFLECTIONAL,\"${cleaned}\") weight(0.6) `\r\n    let wildecards\r\n    if (size == 1) {\r\n      equal = `${cleaned} weight(0.8)`;\r\n      if (wildecard) {\r\n        equal_wildecard = `${cleaned}* weight(0.6)`\r\n      }\r\n    }\r\n\r\n    let query = [equal,\r\n      equal_wildecard,\r\n      form_whole,\r\n      form,\r\n      near\r\n    ].filter(item => {\r\n      return item;\r\n    }).join(',');\r\n\r\n    return `ISABOUT(${query})`;\r\n  }\r\n}\r\n"],"file":"SearchItemDTO.js"}