{"version":3,"sources":["../../../../src/App/Reducers/Loader/reducer.1.js"],"names":["combineReducers","LOADER_ACTIONS","LoaderReducer","state","BODY_ACTION","CONTAINER_ACTION","INITIAL_ACTION","INITIAL_PROGRESS","BODY_PROGRESS","CONTAINER_PROGRESS","action","type","SET_INITIAL_ACTION","_state","Object","assign","counter","push","actionName","result","map","item","length","SET_CONTAINER_ACTION","SET_BODY_ACTION","FINISH_BODY_ACTION","isFinish","Math","round","FINISH_CONTAINER_ACTION","FINISH_INITIAL_ACTION"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nimport {\r\n    LOADER_ACTIONS\r\n} from './actions';\r\n\r\nexport default function LoaderReducer(state = {\r\n    BODY_ACTION: [],\r\n    CONTAINER_ACTION: [],\r\n    INITIAL_ACTION: [],\r\n    INITIAL_PROGRESS: 0,\r\n    BODY_PROGRESS: 0,\r\n    CONTAINER_PROGRESS: 0\r\n}, action) {\r\n    switch (action.type) {\r\n\r\n        case LOADER_ACTIONS.SET_INITIAL_ACTION:\r\n            {\r\n                let _state = Object.assign({}, state);\r\n                let counter = 0;\r\n                _state.INITIAL_ACTION.push({ action: action.actionName, result: false });\r\n\r\n                _state.INITIAL_ACTION = state.INITIAL_ACTION.map(item => {\r\n                    if (item.result == false) {\r\n                        counter++;\r\n                    }\r\n                    return item;\r\n                });\r\n                _state.INITIAL_PROGRESS = counter / _state.INITIAL_ACTION.length;\r\n                return _state;\r\n            }\r\n        case LOADER_ACTIONS.SET_CONTAINER_ACTION:\r\n            {\r\n                let _state = Object.assign({}, state);\r\n                let counter = 0;\r\n                _state.CONTAINER_ACTION.push({ action: action.actionName, result: false });\r\n                _state.CONTAINER_ACTION = state.CONTAINER_ACTION.map(item => {\r\n                    if (item.result == false) {\r\n                        counter++;\r\n                    }\r\n                    return item;\r\n                });\r\n                _state.BODY_PROGRESS = counter / _state.CONTAINER_ACTION.length;\r\n                return _state;\r\n            }\r\n        case LOADER_ACTIONS.SET_BODY_ACTION:\r\n            {\r\n                let _state = Object.assign({}, state);\r\n                let counter = 0;\r\n                _state.BODY_ACTION.push({ action: action.actionName, result: false });\r\n                _state.BODY_ACTION = state.BODY_ACTION.map(item => {\r\n                    if (item.result == false) {\r\n                        counter++;\r\n                    }\r\n                    return item;\r\n                });\r\n                _state.BODY_PROGRESS = counter / _state.BODY_ACTION.length;\r\n                return _state;\r\n            }\r\n        case LOADER_ACTIONS.FINISH_BODY_ACTION:\r\n            {\r\n                let _state = Object.assign({}, state);\r\n                let isFinish = true;\r\n                let counter = 0;\r\n                _state.BODY_ACTION = state.BODY_ACTION.map(item => {\r\n                    if (item.action == action.actionName) {\r\n                        item.result = true;\r\n                    }\r\n                    if (item.result == false) {\r\n                        isFinish = false;\r\n\r\n                    }\r\n                    if (item.result == true) {\r\n                        counter++;\r\n                    }\r\n                    return item;\r\n                });\r\n                if (isFinish == true) {\r\n                    _state.BODY_ACTION = [];\r\n\r\n                }\r\n                _state.BODY_PROGRESS = Math.round((counter / _state.BODY_ACTION.length) * 100);;\r\n                return _state;\r\n            }\r\n        case LOADER_ACTIONS.FINISH_CONTAINER_ACTION:\r\n            {\r\n                let _state = Object.assign({}, state);\r\n                let isFinish = true;\r\n                let counter = 0;\r\n                _state.CONTAINER_ACTION = state.CONTAINER_ACTION.map(item => {\r\n                    if (item.action == action.actionName) {\r\n                        item.result = true;\r\n                    }\r\n                    if (item.result == false) {\r\n                        isFinish = false;\r\n\r\n                    }\r\n                    if (item.result == true) {\r\n                        counter++;\r\n                    }\r\n                    return item;\r\n                });\r\n                if (isFinish == true) {\r\n                    _state.CONTAINER_ACTION = [];\r\n\r\n                }\r\n                _state.CONTAINER_PROGRESS = Math.round((counter / _state.CONTAINER_ACTION.length) * 100);;\r\n                return _state;\r\n\r\n            }\r\n        case LOADER_ACTIONS.FINISH_INITIAL_ACTION:\r\n            {\r\n                let _state = Object.assign({}, state);\r\n                let isFinish = true;\r\n                let counter = 0;\r\n                _state.INITIAL_ACTION = state.INITIAL_ACTION.map(item => {\r\n                    if (item.action == action.actionName) {\r\n                        item.result = true;\r\n                    }\r\n                    if (item.result == false) {\r\n                        isFinish = false;\r\n\r\n                    }\r\n                    if (item.result == true) {\r\n                        counter++;\r\n                    }\r\n                    return item;\r\n                });\r\n                if (isFinish == true) {\r\n                    _state.INITIAL_ACTION = [];\r\n\r\n                }\r\n                _state.INITIAL_PROGRESS = Math.round((counter / _state.INITIAL_ACTION.length) * 100);;\r\n\r\n                return _state;\r\n            }\r\n        default:\r\n            {\r\n                return state;\r\n            }\r\n    }\r\n\r\n}"],"file":"reducer.1.js"}