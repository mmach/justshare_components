{"version":3,"sources":["../../../src/App/Architecture/baseServices.js"],"names":["axios","require","ClientException","LOADER_ACTIONS","NOTIFICATIONS_ACTIONS","Enums","WEB_CONFIG","BaseService","queryThunt","action","model","token","loader","body","Array","isArray","Object","assign","validation","undefined","context","localStorage","getItem","lang","console","log","dispatch","type","dto","method","url","API_URL","NODE_ENV","encodeURIComponent","JSON","stringify","headers","then","response","data","Promise","resolve","catch","error","prototype","errorHandling","reject","res","status","commandThunt","indexOf","exception","SET_NOTIFICATION_GLOBAL","notification","CODE","ERROR_GLOBAL","message","pl","us"],"mappings":"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","sourcesContent":["\"use strict\";\r\nconst axios = require('axios');\r\nimport ClientException from './Exceptions/clientExceptions.js';\r\nimport { LOADER_ACTIONS } from './../Reducers/Loader/actions.js';\r\n\r\nimport { NOTIFICATIONS_ACTIONS } from './../Reducers/Notifications/actions.js';\r\nimport { Enums } from './../../Shared/index.js';\r\nimport WEB_CONFIG from '../../config.js';\r\n\r\nclass BaseService {\r\n\r\n    queryThunt(action, model = {}, token = null, loader = null) {\r\n\r\n\r\n        let body = null\r\n        if (!Array.isArray(model)) {\r\n            body = Object.assign({}, model)\r\n            body.validation = undefined;\r\n\r\n        } else {\r\n            body = model;\r\n        }\r\n\r\n        let context = {\r\n            token: localStorage.getItem('token'),\r\n            lang: localStorage.getItem('lang')\r\n        }\r\n        console.log(context)\r\n        return (dispatch) => {\r\n            /*  switch (loader) {\r\n                  case Enums.LOADER.INITIAL: dispatch({ type: LOADER_ACTIONS.SET_INITIAL_ACTION, actionName: action });\r\n                  case Enums.LOADER.BODY: dispatch({ type: LOADER_ACTIONS.SET_BODY_ACTION, actionName: action });\r\n                  case Enums.LOADER.CONTAINER: dispatch({ type: LOADER_ACTIONS.SET_CONTAINER_ACTION, actionName: action });\r\n                  default: ;\r\n              }*/\r\n            dispatch({ type: action + \"_LOADING\", dto: model });\r\n            return axios({\r\n                method: 'get',\r\n                url: WEB_CONFIG.API_URL[NODE_ENV] + '/query?action=' + encodeURIComponent(JSON.stringify({ \"action\": action, \"model\": encodeURIComponent(JSON.stringify(body)) })),\r\n                headers: { \"Authorization\": `Bearer ${context.token}`, \"Language\": context.lang }\r\n            })\r\n                .then(response => {\r\n\r\n                    dispatch({ type: action + \"_SUCCESS\", data: response.data, dto: model });\r\n                    return Promise.resolve(response);\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    BaseService.prototype.errorHandling(error, dispatch, action, model);\r\n                    return Promise.reject(error.response);\r\n                }).then(function (res) {\r\n                    console.log(res);\r\n                    dispatch({ type: action + \"_FINALLY\" });\r\n\r\n                    /* switch (loader) {\r\n                         case Enums.LOADER.INITIAL: dispatch({ type: LOADER_ACTIONS.FINISH_INITIAL_ACTION, actionName: action });\r\n                         case Enums.LOADER.BODY: dispatch({ type: LOADER_ACTIONS.FINISH_BODY_ACTION, actionName: action });\r\n                         case Enums.LOADER.CONTAINER: dispatch({ type: LOADER_ACTIONS.FINISH_CONTAINER_ACTION, actionName: action });\r\n                         default: ;\r\n                     }*/\r\n                    if (res.status == 200) {\r\n                        return Promise.resolve(res);\r\n                    } else {\r\n                        return Promise.reject(res);\r\n\r\n                    }\r\n                });\r\n\r\n\r\n        }\r\n    }\r\n    commandThunt(action, model = {}, token = null, loader = null) {\r\n\r\n        let body = null\r\n        if (!Array.isArray(model)) {\r\n            body = Object.assign({}, model)\r\n            body.validation = undefined;\r\n\r\n        } else {\r\n            body = model;\r\n        }\r\n        return (dispatch) => {\r\n            /*   switch (loader) {\r\n                   case Enums.LOADER.INITIAL: dispatch({ type: LOADER_ACTIONS.SET_INITIAL_ACTION, actionName: action });\r\n                   case Enums.LOADER.BODY: dispatch({ type: LOADER_ACTIONS.SET_BODY_ACTION, actionName: action });\r\n                   case Enums.LOADER.CONTAINER: dispatch({ type: LOADER_ACTIONS.SET_CONTAINER_ACTION, actionName: action });\r\n                   default: ;\r\n               }*/\r\n            let context = {\r\n                token: localStorage.getItem('token'),\r\n                lang: localStorage.getItem('lang')\r\n            }\r\n            console.log(context)\r\n            dispatch({ type: action + \"_LOADING\", dto: model });\r\n            return axios({\r\n                method: 'POST',\r\n                url: WEB_CONFIG.API_URL[NODE_ENV] + '/command',\r\n                data: { \"action\": action, \"model\": encodeURIComponent(JSON.stringify(body)) },\r\n                headers: { \"Authorization\": `Bearer ${context.token}`, \"Language\": context.lang }\r\n\r\n            })\r\n                .then(response => {\r\n                    dispatch({\r\n                        type: action + \"_SUCCESS\",\r\n                        data: response.data,\r\n                        dto: model\r\n                    });\r\n                    return Promise.resolve(response);\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    BaseService.prototype.errorHandling(error, dispatch, action, model);\r\n                    return Promise.reject(error.response);\r\n\r\n\r\n                }).then(function (res) {\r\n                    dispatch({ type: action + \"_FINALLY\" });\r\n\r\n                    /* switch (loader) {\r\n                         case Enums.LOADER.INITIAL: dispatch({ type: LOADER_ACTIONS.FINISH_INITIAL_ACTION, actionName: action });\r\n                         case Enums.LOADER.BODY: dispatch({ type: LOADER_ACTIONS.FINISH_BODY_ACTION, actionName: action });\r\n                         case Enums.LOADER.CONTAINER: dispatch({ type: LOADER_ACTIONS.FINISH_CONTAINER_ACTION, actionName: action });\r\n                         default: ;\r\n                     }*/\r\n                    if (res.status == 200) {\r\n                        return Promise.resolve(res);\r\n                    } else {\r\n                        return Promise.reject(res);\r\n\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    errorHandling(error, dispatch, action, model) {\r\n        if (error.response) {\r\n            if (error.response.data.error.type.indexOf('_GLOBAL') > 0) {\r\n\r\n                const exception = error.response.data.error;\r\n                dispatch({ type: NOTIFICATIONS_ACTIONS.SET_NOTIFICATION_GLOBAL, notification: exception });\r\n            } else if (error.response.data.error.type.indexOf('ERROR') == 0) {\r\n                console.log(error.response.data.error)\r\n                dispatch({ type: action + \"_ERROR\", exception: error.response.data.error });\r\n            }\r\n        } else {\r\n            const exception = new ClientException();\r\n            exception.error.type = Enums.CODE.ERROR_GLOBAL;\r\n            exception.error.message.pl = error.message;\r\n            exception.error.message.us = error.message;\r\n            dispatch({ type: NOTIFICATIONS_ACTIONS.SET_NOTIFICATION_GLOBAL, notification: exception.error });\r\n\r\n\r\n\r\n            console.log('Error', error);\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport default BaseService \r\nexport { BaseService }"],"file":"baseServices.js"}